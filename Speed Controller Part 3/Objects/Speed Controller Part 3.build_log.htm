<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Tool Versions:</h2>
IDE-Version: µVision V5.31.0.0
Copyright (C) 2020 ARM Ltd and ARM Germany GmbH. All rights reserved.
License Information: Kevin Nelson, n/a, LIC=----
 
Tool Versions:
Toolchain:       MDK-Lite  Version: 5.31.0.0
Toolchain Path:  C:\Keil_v5\ARM\ARMCLANG\Bin
C Compiler:      ArmClang.exe V6.14
Assembler:       Armasm.exe V6.14
Linker/Locator:  ArmLink.exe V6.14
Library Manager: ArmAr.exe V6.14
Hex Converter:   FromElf.exe V6.14
CPU DLL:         SARMCM3.DLL V5.31.0.0
Dialog DLL:      DCM.DLL V1.17.3.0
Target DLL:      STLink\ST-LINKIII-KEIL_SWO.dll V3.0.7.0
Dialog DLL:      TCM.DLL V1.46.0.0
 
<h2>Project:</h2>
C:\Users\kevin\Desktop\Schoolwork\Embedded\Speed Controller Part 3\Speed Controller Part 3.uvprojx
Project File Date:  05/08/2021

<h2>Output:</h2>
*** Using Compiler 'V6.14', folder: 'C:\Keil_v5\ARM\ARMCLANG\Bin'
Rebuild target 'Target 1'
assembling startup_stm32f446xx.s...
compiling system_stm32f4xx.c...
Speed Controller Part 3.c(154): warning: implicit conversion from 'volatile uint32_t' (aka 'volatile unsigned int') to 'float' may lose precision [-Wimplicit-int-float-conversion]
                result = ADC1->DR;                                                                                                                                      // read conversion result       
                       ~ ~~~~~~^~
Speed Controller Part 3.c(160): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
                sprintf(Voltage_Buffer, "Voltage: %.2f V", voltage);
                ~~~~~~~                                    ^~~~~~~
Speed Controller Part 3.c(168): warning: implicit conversion turns floating-point number into integer: 'float' to 'uint32_t' (aka 'unsigned int') [-Wfloat-conversion]
                TIM2->CCR1 = pulse_width + result2;}
                           ~ ~~~~~~~~~~~~^~~~~~~~~
Speed Controller Part 3.c(171): warning: implicit conversion turns floating-point number into integer: 'float' to 'uint32_t' (aka 'unsigned int') [-Wfloat-conversion]
                TIM2->CCR1 = pulse_width - result3;}
                           ~ ~~~~~~~~~~~~^~~~~~~~~
Speed Controller Part 3.c(172): warning: implicit conversion turns floating-point number into integer: 'float' to 'uint32_t' (aka 'unsigned int') [-Wfloat-conversion]
        else TIM2->CCR1 = pulse_width;
                        ~ ^~~~~~~~~~~
Speed Controller Part 3.c(179): warning: implicit conversion from 'volatile uint32_t' (aka 'volatile unsigned int') to 'float' may lose precision [-Wimplicit-int-float-conversion]
                        Current = TIM1->CCR1;                                                                   // Read CCR1 input capture into Current
                                ~ ~~~~~~^~~~
Speed Controller Part 3.c(186): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
                sprintf(RPM_Buffer, "RPM: %.1f", RPM);
                ~~~~~~~                          ^~~
Speed Controller Part 3.c(251): warning: implicit conversion turns floating-point number into integer: 'float' to 'uint32_t' (aka 'unsigned int') [-Wfloat-conversion]
                        TIM2->CCR1 = kp * error + ITerm - kd * dInput;
                                   ~ ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~
Speed Controller Part 3.c(252): warning: implicit conversion from 'volatile uint32_t' (aka 'volatile unsigned int') to 'float' may lose precision [-Wimplicit-int-float-conversion]
      if(TIM2->CCR1 > outMax) TIM2->CCR1 = outMax;
         ~~~~~~^~~~ ~
Speed Controller Part 3.c(252): warning: implicit conversion turns floating-point number into integer: 'float' to 'uint32_t' (aka 'unsigned int') [-Wfloat-conversion]
      if(TIM2->CCR1 > outMax) TIM2->CCR1 = outMax;
                                         ~ ^~~~~~
Speed Controller Part 3.c(253): warning: implicit conversion from 'volatile uint32_t' (aka 'volatile unsigned int') to 'float' may lose precision [-Wimplicit-int-float-conversion]
      else if(TIM2->CCR1 < outMin) TIM2->CCR1 = outMin;
              ~~~~~~^~~~ ~
Speed Controller Part 3.c(253): warning: implicit conversion turns floating-point number into integer: 'float' to 'uint32_t' (aka 'unsigned int') [-Wfloat-conversion]
      else if(TIM2->CCR1 < outMin) TIM2->CCR1 = outMin;
                                              ~ ^~~~~~
Speed Controller Part 3.c(276): warning: implicit conversion changes signedness: 'unsigned long' to 'int' [-Wsign-conversion]
      SampleTime = (unsigned long)NewSampleTime;
                 ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
Speed Controller Part 3.c(285): warning: implicit conversion from 'volatile uint32_t' (aka 'volatile unsigned int') to 'float' may lose precision [-Wimplicit-int-float-conversion]
   if(TIM2->CCR1 > outMax) TIM2->CCR1 = outMax;
      ~~~~~~^~~~ ~
Speed Controller Part 3.c(285): warning: implicit conversion turns floating-point number into integer: 'float' to 'uint32_t' (aka 'unsigned int') [-Wfloat-conversion]
   if(TIM2->CCR1 > outMax) TIM2->CCR1 = outMax;
                                      ~ ^~~~~~
Speed Controller Part 3.c(286): warning: implicit conversion from 'volatile uint32_t' (aka 'volatile unsigned int') to 'float' may lose precision [-Wimplicit-int-float-conversion]
   else if(TIM2->CCR1 < outMin) TIM2->CCR1 = outMin;
           ~~~~~~^~~~ ~
Speed Controller Part 3.c(286): warning: implicit conversion turns floating-point number into integer: 'float' to 'uint32_t' (aka 'unsigned int') [-Wfloat-conversion]
   else if(TIM2->CCR1 < outMin) TIM2->CCR1 = outMin;
                                           ~ ^~~~~~
Speed Controller Part 3.c(293): warning: implicit conversion from 'volatile uint32_t' (aka 'volatile unsigned int') to 'float' may lose precision [-Wimplicit-int-float-conversion]
   ITerm = TIM2->CCR1;
         ~ ~~~~~~^~~~
18 warnings generated.
compiling Speed Controller Part 3.c...
linking...
Program Size: Code=6492 RO-data=660 RW-data=4 ZI-data=1720  
".\Objects\Speed Controller Part 3.axf" - 0 Error(s), 18 Warning(s).

<h2>Software Packages used:</h2>

Package Vendor: ARM
                http://www.keil.com/pack/ARM.CMSIS.5.7.0.pack
                ARM.CMSIS.5.7.0
                CMSIS (Cortex Microcontroller Software Interface Standard)
   * Component: CORE Version: 5.4.0

Package Vendor: Keil
                http://www.keil.com/pack/Keil.STM32F4xx_DFP.2.14.0.pack
                Keil.STM32F4xx_DFP.2.14.0
                STMicroelectronics STM32F4 Series Device Support, Drivers and Examples
   * Component: Startup Version: 2.6.3

<h2>Collection of Component include folders:</h2>
  .\RTE\_Target_1
  C:\Users\kevin\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include
  C:\Users\kevin\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.14.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include

<h2>Collection of Component Files used:</h2>

   * Component: ARM::CMSIS:CORE:5.4.0

   * Component: Keil::Device:Startup:2.6.3
      Source file:   MDK\Device\Source\ARM\STM32F4xx_OTP.s
      Source file:   MDK\Device\Source\ARM\STM32F446xx_OPT.s
      Include file:  Drivers\CMSIS\Device\ST\STM32F4xx\Include\stm32f4xx.h
      Source file:   Drivers\CMSIS\Device\ST\STM32F4xx\Source\Templates\arm\startup_stm32f446xx.s
      Source file:   Drivers\CMSIS\Device\ST\STM32F4xx\Source\Templates\system_stm32f4xx.c
Build Time Elapsed:  00:00:01
</pre>
</body>
</html>
